# yamllint disable-file
# SPDX-FileCopyrightText: Â© 2024 nosludge <https://github.com/nosludge>
# SPDX-FileContributor: szymonmaszke <github@maszke.co>
#
# SPDX-License-Identifier: Apache-2.0
#
---
name: "Harden"

on:
  workflow_dispatch:
    inputs:
      organization:
        description: "Account/organization plan"
        type: "choice"
        options:
          - "Free"
          - "Pro/Team"
          - "Enterprise"
      reviewers:
        description: "Number of reviewers available to review pull requests"
        type: "choice"
        default: "0 (single contributor)"
        options:
          - "0 (single contributor)"
          - "1"
          - "2 (or more)"
        required: true

permissions: {} # yamllint disable-line rule:braces

jobs:
  harden:
    name: "Harden"
    permissions:
      contents: "read"
    timeout-minutes: 10
    runs-on: "ubuntu-latest"
    steps:
      - name: "Harden Runner"
        # yamllint disable rule:line-length
        uses: "step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6" # v2.8.1
        # yamllint enable rule:line-length
        #- name: Harden Runner
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
      - name: "Normalize type of account/organization"
        id: "organization"
        env:
          ORGANIZATION: "${{ inputs.organization }}"
        run: |
          case "${ORGANIZATION}" in
            "Free")
              echo "type=free" >> "${GITHUB_OUTPUT}"
              ;;
            "Pro/Team")
              echo "type=pro" >> "${GITHUB_OUTPUT}"
              ;;
            *)
              echo "type=enterprise" >> "${GITHUB_OUTPUT}"
              ;;
          esac
      - name: "Normalize reviewers values"
        id: "reviewers"
        env:
          REVIEWERS: "${{ inputs.reviewers }}"
        run: |
          case "${REVIEWERS}" in
            "0 (single contributor)")
              echo "count=0" >> "${GITHUB_OUTPUT}"
              ;;
            "1")
              echo "count=1" >> "${GITHUB_OUTPUT}"
              ;;
            *)
              echo "count=2" >> "${GITHUB_OUTPUT}"
              ;;
          esac
      - name: "Calculate settings for the repository"
        id: "settings"
        env:
          REPOSITORY_VISIBILITY: "${{ github.event.repository.visibility }}"
        run: |
          case "${REPOSITORY_VISIBILITY}" in
            "public" | "internal" )
              echo "advanced_security=true" >> "${GITHUB_OUTPUT}"
              echo "secret_scanning=true" >> "${GITHUB_OUTPUT}"
              ;;
            *)
              echo "visibility=private" >> "${GITHUB_OUTPUT}"
              ;;
          esac
      - name: "Checkout repository"
        # yamllint disable rule:line-length
        uses: "actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332" # v4.1.7
        # yamllint enable rule:line-length
        with:
          sparse-checkout: |
            .github/rulesets
          sparse-checkout-cone-mode: false
          persist-credentials: false
      - name: "Apply rulesets (public/enterprise/pro/team only)"
        # Administration write
        # https://docs.github.com/en/rest/repos/rules?apiVersion=2022-11-28#create-a-repository-ruleset
        if: >
          github.event.repository.visibility == 'public'
          || steps.organization.outputs.type == 'enterprise'
          || steps.organization.outputs.type == 'pro'
        env:
          GH_TOKEN: "${{ secrets.TEMPLATE_GITHUB_TOKEN }}"
          RULES_ENDPOINT: >-
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/rulesets
          REVIEWERS: "${{ steps.reviewers.outputs.count }}"
        run: >
          find .github/rulesets -name "*.json" -print0 | parallel -0 -j0 --halt now,fail=1 \
            "gh api --method POST \
              -H 'Accept: application/vnd.github+json' \
              -H 'X-GitHub-Api-Version: 2022-11-28' \
              '${RULES_ENDPOINT}' \
              --input {} \
              -F \"rules[][parameters][required_approving_review_count]=${REVIEWERS}\""
      - name: "Enable GitHub Pages (public/enterprise only)"
        # Administration AND Pages write
        # Source: https://docs.github.com/en/rest/pages/pages?apiVersion=2022-11-28#create-a-github-pages-site
        if: >
          github.event.repository.visibility == 'public'
          || steps.organization.outputs.type == 'enterprise'
        env:
          GH_TOKEN: "${{ secrets.TEMPLATE_GITHUB_TOKEN }}"
          PAGES_ENDPOINT: >-
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/pages
        run: >
          gh api
          --method POST
          -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28"
          "${PAGES_ENDPOINT}"
          -f "source[branch]=gh-pages" -f "source[path]=/docs"
      - name: "Apply general settings for the repository"
        # Administration write
        # https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#update-a-repository
        env:
          GH_TOKEN: "${{ secrets.TEMPLATE_GITHUB_TOKEN }}"
          ENDPOINT: >-
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}
          HOMEPAGE: >-
            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
        run: >
          cat <<EOF | gh api
          --method PATCH
          -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28"
          "${ENDPOINT}"
          --input -
            {
              "allow_auto_merge": false,
              "allow_merge_commit": false,
              "allow_rebase_merge": false,
              "allow_squash_merge": true,
              "allow_update_branch": true,
              "delete_branch_on_merge": true,
              "use_squash_pr_title_as_default": true,
              "has_issues": true,
              "has_projects": true,
              "has_wiki": false,
              "homepage": "${HOMEPAGE}",
              "squash_merge_commit_title": "PR_TITLE",
              "squash_merge_commit_message": "COMMIT_MESSAGES",
              "web_commit_signoff_required": true
            }
          EOF
      - name: "Enable security features for the repository (best effort)"
        # Administration write
        # https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#update-a-repository
        continue-on-error: true
        env:
          GH_TOKEN: "${{ secrets.TEMPLATE_GITHUB_TOKEN }}"
          ENDPOINT: >-
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}
        run: >
          cat <<EOF | gh api
          --method PATCH
          -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28"
          "${ENDPOINT}"
          --input -
            {
              "security_and_analysis": {
                "advanced_security": {
                  "status": "enabled"
                },
                "secret_scanning": {
                  "status": "enabled"
                },
                "secret_scanning_ai_detection": {
                  "status": "enabled"
                },
                "secret_scanning_push_protection": {
                  "status": "enabled"
                },
                "secret_scanning_non_provider_patterns": {
                  "status": "enabled"
                }
              }
            }
          EOF

      # Discussions are currently disabled as these are not customizable via API
      # See here: https://github.com/orgs/community/discussions/46930
      - name: "Enable discussions"
        # Administration write
        env:
          GH_TOKEN: "${{ secrets.TEMPLATE_GITHUB_TOKEN }}"
        run: >
          gh repo edit --enable-discussions=true
      - name: "Enable private vulnerability reporting (public only)"
        # Administration write
        # https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#enable-private-vulnerability-reporting-for-a-repository
        # More info:
        # https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing-information-about-vulnerabilities/privately-reporting-a-security-vulnerability
        if: >
          github.event.repository.visibility == 'public'
        env:
          GH_TOKEN: "${{ secrets.TEMPLATE_GITHUB_TOKEN }}"
          # yamllint disable rule:line-length
          PRIVATE_VULNERABILITY_REPORTING_ENDPOINT: >-
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/private-vulnerability-reporting
          # yamllint enable rule:line-length
        run: >
          gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${PRIVATE_VULNERABILITY_REPORTING_ENDPOINT}"
      - name: "Enable vulnerability alerts (public only)"
        # Administration write
        # https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#enable-vulnerability-alerts
        # More info:
        # https://docs.github.com/en/code-security/dependabot/dependabot-alerts/about-dependabot-alerts
        if: >
          github.event.repository.visibility == 'public'
        env:
          GH_TOKEN: "${{ secrets.TEMPLATE_GITHUB_TOKEN }}"
          # yamllint disable rule:line-length
          VULNERABILITY_ALERTS_ENDPOINT: >-
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/vulnerability-alerts
          # yamllint enable rule:line-length
        run: >
          gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${VULNERABILITY_ALERTS_ENDPOINT}"
...
