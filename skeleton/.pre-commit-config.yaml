# SPDX-FileCopyrightText: Â© 2024 nosludge <https://github.com/nosludge>
# SPDX-FileContributor: szymonmaszke <github@maszke.co>
#
# SPDX-License-Identifier: Apache-2.0

---
# Renovate does not support revision pinning for now, see:
# https://github.com/renovatebot/renovate/issues/22567
default_stages:
  - "pre-commit"
default_install_hook_types:
  - "pre-commit"
  - "commit-msg"
  - "pre-push"
  - "post-checkout"
  - "post-merge"
fail_fast: true
repos:
  ##############################################################################
  #
  #                       NON PYPROJECT BASED CHECKS
  #
  ##############################################################################
  - repo: "https://github.com/siderolabs/conform"
    rev: "e1fdd4c4624bafa674a905595a26c8d0797ddb6c"  # frozen: v0.1.0-alpha.30
    hooks:
      # pre-push due to PGP signature
      - id: "conform"
        name: "<<<CHECK>>> Policy"
        verbose: true
        stages:
          - "pre-push"
        entry: "conform enforce"
        pass_filenames: false
  - repo: "https://github.com/trufflesecurity/trufflehog"
    rev: "e4956615ad9a60a19b3bdb8fd40d91f65222f5ff"  # frozen: v3.84.1
    hooks:
      - id: "trufflehog"
        name: "<<<CHECK>>> Secrets Checker (TruffleHog)"
        verbose: true
  - repo: "https://github.com/google/osv-scanner/"
    rev: "b13f37e1a1e4cb98556c1d34cd3256a876929be1"  # frozen: v1.9.1
    hooks:
      - id: "osv-scanner"
        name: "<<<CHECK>>> OSV Scanner"
        args:
          - "-r"
          - "--skip-git"
          - "--experimental-licenses=MIT,Apache-2.0,BSD-2-Clause,BSD-3-Clause,Unlicense,Zlib,OFL-1.1,0BSD,PSF-2.0"
          - "./"
  - repo: "https://github.com/renovatebot/pre-commit-hooks"
    rev: "ea6cb40ca4c4219054067f5ae2913328bd654b6f"  # frozen: 39.40.0
    hooks:
      - id: "renovate-config-validator"
        name: "<<<CHECK>>> Renovate config"
        verbose: true
  - repo: "https://github.com/errata-ai/vale"
    rev: "87c916b4b76cfbad25ca55f8e462f38515f06d5e"  # frozen: v3.9.1
    hooks:
      - id: "vale"
        entry: "vale sync"
        name: "<<<SETUP>>> Synchronize Prose Linter (Vale)"
        verbose: true
        pass_filenames: false
        require_serial: true
        stages:
          - "pre-commit"
  - repo: "https://github.com/errata-ai/vale"
    rev: "87c916b4b76cfbad25ca55f8e462f38515f06d5e"  # frozen: v3.9.1
    hooks:
      - id: "vale"
        name: "<<<CHECK>>> Prose Linter (Vale)"
        verbose: true
  - repo: "https://github.com/rhysd/actionlint"
    rev: "5db9d9cde2f3deb5035dea3e45f0a9fff2f29448"  # frozen: v1.7.4
    hooks:
      - id: "actionlint"
        name: "<<<CHECK>>> GitHub Actions"
        verbose: true
  - repo: "https://github.com/editorconfig-checker/editorconfig-checker"
    # Latest release currently does not provide pre-commit hook
    rev: "10f16fc843581773830f0cbf3a3f8c285ee1edc3"
    hooks:
      - id: "editorconfig-checker"
        name: "<<<CHECK>>> .editorconfig compliance"
        verbose: true
        entry: "editorconfig-checker --exclude 'LICENSE*'"
        stages:
          - "pre-commit"
  # Pre-commit provided hooks
  - repo: "https://github.com/pre-commit/pre-commit-hooks"
    rev: "cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b"  # frozen: v5.0.0
    hooks:
      - id: "no-commit-to-branch"
        name: "<<<CHECK>>> No commits to main branch Linter"
      - id: "end-of-file-fixer"
        name: "<<<FIX>>> End of file"
        stages:
          - "pre-commit"
      - id: "mixed-line-ending"
        name: "<<<FIX>>> Mixed line ending"
      - id: "pretty-format-json"
        name: "<<<FIX>>> JSON format"
        args:
          - "--autofix"
          - "--no-sort-keys"
      - id: "name-tests-test"
        name: "<<<CHECK>>> Test files names (test_*.py)"
        args:
          - "--pytest-test-first"
      - id: "trailing-whitespace"
        name: "<<<CHECK>>> Trailing whitespace"
        stages:
          - "pre-commit"
      - id: "check-added-large-files"
        name: "<<<CHECK>>> No large files"
        stages:
          - "pre-commit"
      - id: "check-case-conflict"
        name: "<<<CHECK>>> Case conflicts"
      - id: "check-executables-have-shebangs"
        name: "<<<CHECK>>> Executables have shebangs"
        stages:
          - "pre-commit"
      - id: "check-shebang-scripts-are-executable"
        name: "<<<CHECK>>> Shebang scripts executable"
        stages:
          - "pre-commit"
      - id: "check-merge-conflict"
        name: "<<<CHECK>>> Merge conflicts strings"
      - id: "check-symlinks"
        name: "<<<CHECK>>> Broken symlinks"
      - id: "check-toml"
        name: "<<<CHECK>>> TOML syntax errors"
      - id: "forbid-submodules"
        name: "<<<CHECK>>> No git submodules"
  ############################################################################
  #
  #                         PYPROJECT BASED CHECKS
  #
  ############################################################################
  - repo: "local"
    hooks:
      - id: "dco"
        verbose: true
        name: "<<<CHECK>>> DCO file untouched"
        language: "fail"
        entry: >
          Changing DCO is prohibited according to the DCO itself.
          If you wish to change/remove it, please do so in a separate commit
          and disable this check.
        files: "^DCO.md$"
      - id: "commit"
        verbose: true
        name: "<<<CHECK>>> Conventional Commit Message"
        entry: "pdm run check-commit"
        language: "system"
        stages:
          - "commit-msg"
        always_run: true
      - id: "generation"
        verbose: true
        name: "<<<FIX>>> Updates via static code generation"
        entry: "pdm run fix-generation"
        pass_filenames: false
        language: "system"
        always_run: true
      - id: "workflows"
        verbose: true
        name: "<<<CHECK>>> Check GitHub Actions Workflows"
        entry: "pdm run check-workflows"
        language: "system"
        types:
          - "file"
        files: "$.github/workflows/.*.yml^"
      - id: "pdm-sync"
        verbose: true
        name: "<<<CHECK>>> PDM Sync"
        entry: "pdm sync"
        pass_filenames: false
        language: "system"
        stages:
          - "post-checkout"
          - "post-merge"
        always_run: true
      - id: "pyproject"
        verbose: true
        name: "<<<FIX>>> pyproject.toml"
        entry: "pdm run check-pyproject"
        files: "^pyproject.toml$"
        language: "system"
      - id: "pdm-lock"
        verbose: true
        name: "<<<CHECK>>> PDM Lock (use `pdm lock -G:all` to fix)"
        entry: "pdm lock --check -v"
        pass_filenames: false
        language: "system"
        files: "^pyproject.toml$"
      - id: "pre-commit-config"
        verbose: true
        name: "<<<CHECK>>> Precommit Config File"
        entry: "pdm run -v check-pre-commit-config"
        files: "^.pre-commit-config.yaml$"
        language: "system"
      - id: "pre-commit-hooks"
        verbose: true
        name: "<<<CHECK>>> Precommit Hooks File"
        entry: "pdm run -v check-pre-commit-hooks"
        files: "^.pre-commit-hooks.yaml$"
        language: "system"
      - id: "citation"
        verbose: true
        name: "<<<CHECK>>> Citation File"
        entry: "pdm run check-citation"
        files: "^CITATION.cff$"
        language: "system"
      - id: "ini"
        verbose: true
        name: "<<<CHECK>>> INI"
        entry: "pdm run check-ini"
        language: "system"
        types_or:
          - "ini"
          - "editorconfig"
      - id: "markdown"
        verbose: true
        name: "<<<FIX>>> Markdown"
        entry: "pdm run fix-markdown"
        language: "system"
        types:
          - "markdown"
      - id: "yaml"
        verbose: true
        name: "<<<CHECK>>> YAML"
        entry: "pdm run check-yaml"
        language: "system"
        types:
          - "yaml"
      - id: "fix-legal"
        verbose: true
        name: "<<<FIX>>> Legal"
        entry: "pdm run fix-legal"
        language: "system"
        require_serial: true
        exclude: "^(pdm.lock.*|LICENSE.md|LICENSES/.*)$"
      - id: "check-legal"
        verbose: true
        name: "<<<CHECK>>> Legal"
        entry: "pdm run check-legal"
        language: "system"
        pass_filenames: false
      - id: "docs"
        verbose: true
        name: "<<<CHECK>>> Docs"
        entry: "pdm run check-docs"
        pass_filenames: false
        language: "system"
        types:
          - "file"
        files: "$(docs/.*|pyproject.toml|mkdocs.yml|src/.*.py|.*.md)^"
      - id: "python"
        verbose: true
        name: "<<<FIX>>> Python"
        entry: "pdm run fix-python"
        language: "system"
        require_serial: true
        types:
          - "python"
      - id: "security"
        verbose: true
        name: "<<<CHECK>>> Security"
        entry: "pdm run check-security"
        language: "system"
      - id: "tests"
        verbose: true
        name: "<<<CHECK>>> Python Tests"
        entry: "pdm run test-all"
        pass_filenames: false
        language: "system"
        types:
          - "python"
...
